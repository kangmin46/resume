- layout: top-middle
  name: 커피 주문 서비스 O2O
  quote: >
    2019.11.26 ~ 2019.12.27
  description: | # this will include new lines to allow paragraphs
    * 주문과 매장 등록, 알림, 검색,  등의 다양한 도메인을 경험하고 해당 도메인을 토대로 Spring Data Jpa를 사용하여 개발
    * 개발 도중 예외처리, 로그인 패스워드 확인 등, 비즈니스 로직이 아닌 인프라 로직의 중복이 발생하는 문제가 발생
        * AOP의 개념을 활용하여 각 각 ExceptionHandler, Interceptor 등을 적용하여 코드의 중복을 제거하고 관심사를 분리하여 해결.
    * 다양한 기능을 구현하며 Service Layer가 복잡해지는 문제가 발생
        * 퍼사드 패턴의 개념을 프로젝트에 적용하여 Entity에 접근하는 InternerService 클래스와 각 Entity를 토대로 비즈니스 로직을 수행하는 Service클래스로 분리하여 문제를 해결
    * Github Action, Nginx, Docker를 사용하여 배포 환경 구축
      * FrontEnd, BackEnd를 밸런싱 해주기 위하여 Nginx를 도입하여 리버스 프록시 용도로 사용
      * 배포 환경을 원활하게 하기 위하여 Github Action을 이용하여 빌드 및 테스트 실행 후 Docker 이미지를 업로드하여 배포
- layout: top-middle
  name: 유튜브 클론 프로젝트
  link: https://github.com/everyone-driven-development/miniprojects-2019
  quote: >
    2019.08.13 ~ 2019.09.04
  description: | # this will include new lines to allow paragraphs
    * User, Comment, Subscription, Video등에 대한 CRUD 작업
      * FetchType 활용을 통한 성능 개선
        * Entity를 가져올 때  자신과 연관된 Entity를 실제로 사용할 때 연관된 엔티티를 조회(SELECCT )하는 지연 로딩을 구현하여 서버의 성능을 높임
      * XSS(Cross-Site Scripting)공격을 방어하기 위한 XSS 필터를 적용하여 서버의 안정성을 높임
      * Paging 처리를 원활하게 하기 위하여 Pagable 인터페이스를 활용하여 Pagination 처리
    * 탄탄한 테스트를 만드는 데 집중
      * 총 113개의 TestCase, TestCoverage : class(100%), method(97%), line(97%)
      * 처음 인수 테스트의 개념을 배우고 직접 프로젝트에 적용해 보려고 실행
      * 다양한 예외 상황에서의 TestCase를 추가하여 완성도 높은 프로젝트를 위해 고민